1. DAG+Linear throttling vs. Postgres cost-estimation:
	- Currently, there are two Postgresql translators that leave side-by-side:
		- uk.ac.ox.cs.pdq.cost.estimators.PostgresqlBlackBoxEstimator
		  estimates cost on "plans", but only supports input plans that are
		  linear and DAG-bottom-up.
		  However, DAG-top-down are not supported inputs, although we should
		  have a way to support at those of linear shapes.
		
		- uk.ac.ox.cs.pdq.planner.dag.cost.PostgresqlBlackBoxEstimator
		  estimates the cost on DAGConfiguration directly, hence it is oblivious
		  to the config's plan control flow.
		  However, the current planner's architecture requires costs to the 
		  estimates on plan rather than configs.

	It is possible to adapt the planner with relatively small changes so that, in 
	the DAG world, cost are estimated on cost rather that plans. The necessary 
	code exists and is currently comment out in:
		- uk.ac.ox.cs.pdq.planner.dag.ConfigurationUtility
		- uk.ac.ox.cs.pdq.planner.explorer.CostEstimatorFactory
	Uncomment this code will make a few other (but minor) changes necessary.

	BOTTOM LINE
	However, even with the changes, currently forcing Postgresql cost estimation
	on DAG+Linear throttling leads to assertion problem in execution.
	See regression tests: test/dag/tpch/fk_inputs_BLACKBOX_DB/

2. DAGOptimized / DAGILP slower to find a find a first plan than generic.
	How to reproduce
	On test/dag/benchmark/case_004 to 006, no plan is found when the time limit 
	is 1 minute. Generic find plans within that time limit.

3. In some case, apparently linked with multi-threading, a timeout is reached
without properly throwing a LimitedReachedException. This causes the planner to
occasionally complete silently without finding a plan. In regression testing,
where there is an expected plan, this is reported as an error, although the 
actual reason why no plan was found is the time limit (not an error 
stricto sensu). 