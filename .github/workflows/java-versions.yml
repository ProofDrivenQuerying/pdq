name: Test with multiple Java versions

on:
  push:
    branches:
      - ci
  pull_request:
    branches-ignore:
      - '**'

jobs:
  build:
    name: Java ${{ matrix.java-version }}

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        java-version: [ 14 ]

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: root
          POSTGRES_DB: pdq

        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2

      - name: Set up java ${{ matrix.java-version }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java-version }}
          architecture: x64

      - name: Download tpch data
        run: |
          wget -q --no-check-certificate -O pdq-tpch-test-data.zip "https://unioxfordnexus-my.sharepoint.com/:u:/g/personal/some3327_ox_ac_uk/ESytqq-8oyJNtF_dRq6aTrYBNtVacXhL5yP51Rf11A4v_A?e=1Lruh0&download=1"
          unzip pdq-tpch-test-data.zip

      - name: Set up tpch database & user
        run: |
          psql -U postgres -c "create user admin password 'admin'"
          psql -U postgres -c "create database tpch"
          psql -U postgres -c "ALTER DATABASE tpch OWNER TO admin"
        working-directory: pdq-tpch-test-data
        env:
          PGPASSWORD: root
          PGHOST: localhost
          PGPORT: 5432

      - name: Ingest tpch data
        run: |
          sed -i 's+/path/to/pdq-tpch-test-data+/tmp+g' tpch-build-db.sql
          export CONTAINERID=$(docker ps --filter "name=postgres" | awk 'NR==2 {print $1}')
          docker cp . ${CONTAINERID}:/tmp
          psql -U admin tpch -c "\i tpch-build-db.sql"
          psql -U admin tpch -c "\d+"
          psql -U admin tpch -c "\dt"
          psql -U admin tpch -c "\l"
        working-directory: pdq-tpch-test-data
        env:
          PGPASSWORD: admin
          PGHOST: localhost
          PGPORT: 5432

      - name: Install all components
        run: mvn -B -DskipTests=true install

      - name: Test pdq common
        run: mvn -B test -f common
        if: ${{ always() }}

      - name: Test pdq datasources
        run: mvn -B test -f datasources
        if: ${{ always() }}

      - name: Test pdq reasoning
        run: mvn -B test -f reasoning
        if: ${{ always() }}

      - name: Test pdq cost
        run: mvn -B test -f cost
        if: ${{ always() }}

